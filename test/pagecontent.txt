<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Complex React in One File</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; transition: background 0.3s, color 0.3s; }
        .container { max-width: 700px; margin: auto; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        .dark-mode { background: #333; color: white; }
        .light-mode { background: #fff; color: black; }
        .btn { padding: 10px 15px; margin: 5px; border: none; cursor: pointer; border-radius: 5px; }
        .dark-btn { background: black; color: white; }
        .light-btn { background: white; color: black; border: 1px solid black; }
        .input { width: 100%; padding: 10px; margin: 10px 0; border-radius: 5px; border: 1px solid #ddd; }
        .fade-in { animation: fadeIn 0.5s ease-in; }
        @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
    </style>
</head>
<body>

<div id="root"></div>

<script type="text/babel">
    function App() {
        const [count, setCount] = React.useState(0);
        const [name, setName] = React.useState("");
        const [items, setItems] = React.useState([]);
        const [filter, setFilter] = React.useState("");
        const [darkMode, setDarkMode] = React.useState(false);

        React.useEffect(() => {
            fetch("https://jsonplaceholder.typicode.com/posts?_limit=5")
                .then(res => res.json())
                .then(data => setItems(data));
        }, []);

        return (
            <div className={`container ${darkMode ? "dark-mode" : "light-mode"}`}>
                <h1 className="fade-in">Complex React App in One File</h1>

                <button className={`btn ${darkMode ? "light-btn" : "dark-btn"}`} onClick={() => setDarkMode(!darkMode)}>
                    Toggle {darkMode ? "Light" : "Dark"} Mode
                </button>

                <h2>Counter: {count}</h2>
                <button className="btn dark-btn" onClick={() => setCount(count + 1)}>Increment</button>
                <button className="btn light-btn" onClick={() => setCount(count - 1)}>Decrement</button>

                <h2>Enter Your Name</h2>
                <input className="input" type="text" placeholder="Your name" value={name} onChange={(e) => setName(e.target.value)} />
                {name && <p>Hello, {name}!</p>}

                <h2>Posts List</h2>
                <input className="input" type="text" placeholder="Search posts..." value={filter} onChange={(e) => setFilter(e.target.value)} />
                
                <ul>
                    {items.filter(item => item.title.includes(filter)).map(item => (
                        <li key={item.id} className="fade-in"><strong>{item.title}</strong>: {item.body}</li>
                    ))}
                </ul>
            </div>
        );
    }

    ReactDOM.createRoot(document.getElementById("root")).render(<App />);
</script>

</body>
</html>
